name: CI

on: push

jobs:

  nix-build:
    name: Nix build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: cachix/install-nix-action@v16
        with:
          extra_nix_config: |
            trusted-public-keys = hydra.iohk.io:f/Ea+s+dFdN+3Y/G+FDgSq+a5NEWhJGzdjvKNGv0/EQ= cache.nixos.org-1:6NCHdD59X431o0gWypbMrAURkbJ16ZPMQFGspcDShjY=
            substituters = https://hydra.iohk.io https://cache.nixos.org/
      - uses: cachix/cachix-action@v10
        with:
          name: jmc
          authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
      - name: Nix build
        run: nix build -L
      - name: Build cabal shell
        run: nix build -L '.#devShell.x86_64-linux'
      - name: Build nightly shell
        run: nix build -L '.#devShells.x86_64-linux.stack-nightly-shell'
      - name: Build lts-19 shell
        run: nix build -L '.#devShells.x86_64-linux.stack-lts19-shell'

  stack-build:
    name: Stack ${{ matrix.resolver }} on ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        resolver: [ nightly, lts-19, lts-18, lts-17, lts-16, lts-15 ]
        os: [ macos-latest, ubuntu-latest ]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - uses: haskell/actions/setup@v1
        with:
          enable-stack: true
      - name: Initialize stack project
        run: stack init --resolver ${{ matrix.resolver }}
      - name: Generate lock file
        run: stack build --resolver ${{ matrix.resolver }} --dry-run
      - run: ls -lah
      - run: stack build --resolver ${{ matrix.resolver }} --only-dependencies
      - run: stack build --resolver ${{ matrix.resolver }}
      - run: stack build --resolver ${{ matrix.resolver }} --haddock --test --bench --no-run-benchmarks

  cabal-build:
    name: Cabal with GHC ${{ matrix.ghc }} on ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        ghc: [ '8.8.3', '8.10.7', '9.0.2', '9.2.2' ]
        os: [ ubuntu-latest, macos-latest ]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - uses: haskell/actions/setup@v1
        with:
          ghc-version: ${{ matrix.ghc }}
      - uses: actions/cache@v2
        with:
          path: |
            ~/.cabal
            dist-newstyle
          key: cabal-cache-${{ matrix.os }}-${{ matrix.ghc }}-${{ hashFiles('**/*.cabal') }}
      - run: cabal new-build --only-dependencies
      - run: cabal new-build -f debug
      - run: cabal new-test -f debug --test-show-details=direct
      - run: cabal new-exec -f debug calligraphy -- -m Test.Reference --output-stdout | diff -u test/Test/Reference.dot -
